apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
        - name: jenkins
          image: jenkins/jenkins:lts
          ports:
            - containerPort: 8080
            - containerPort: 50000
          securityContext:
            privileged: true  # Required for running Docker inside Jenkins
            runAsUser: 0  # Run the container as root to ensure permissions for installing packages
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-data
          command:
            - "sh"
            - "-c"
            - |
              apt-get update && \
              apt-get install -y docker.io && \
              apt-get install -y curl && \
              curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" && \
              chmod +x ./kubectl && \
              mv ./kubectl /usr/local/bin/kubectl && \
              service docker start && \
              java -jar /usr/share/jenkins/jenkins.war
      initContainers:
        - name: set-permissions
          image: busybox
          command:
            - "sh"
            - "-c"
            - "chmod -R 777 /var/jenkins_home"
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-data
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
spec:
  selector:
    app: jenkins
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30000
  type: NodePort
